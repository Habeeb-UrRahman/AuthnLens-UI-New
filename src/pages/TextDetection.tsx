
import { useState } from 'react';
import Layout from '@/components/Layout';
import DetectionResult from '@/components/DetectionResult';
import { Card, CardContent } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { Textarea } from '@/components/ui/textarea';
import { useToast } from '@/components/ui/use-toast';

const TextDetection = () => {
  const [text, setText] = useState('');
  const [isAnalyzing, setIsAnalyzing] = useState(false);
  const [analysisComplete, setAnalysisComplete] = useState(false);
  const [analysisResult, setAnalysisResult] = useState<{ isAI: boolean; confidence: number } | undefined>();
  const { toast } = useToast();

  const handleInputChange = (e: React.ChangeEvent<HTMLTextAreaElement>) => {
    setText(e.target.value);
    if (analysisComplete) {
      setAnalysisComplete(false);
      setAnalysisResult(undefined);
    }
  };

  const handleAnalyzeClick = () => {
    if (!text.trim()) {
      toast({
        title: "No text entered",
        description: "Please enter some text to analyze",
        variant: "destructive",
      });
      return;
    }

    if (text.trim().length < 50) {
      toast({
        title: "Text too short",
        description: "Please enter at least 50 characters for accurate analysis",
        variant: "destructive",
      });
      return;
    }

    setIsAnalyzing(true);
    setAnalysisComplete(false);
    
    // Simulate API call to ML model
    setTimeout(() => {
      // This is where you would actually call your Keras model API
      const mockResult = {
        isAI: Math.random() > 0.5, // Random result for now
        confidence: 0.7 + Math.random() * 0.25, // Random confidence between 70-95%
      };
      
      setAnalysisResult(mockResult);
      setIsAnalyzing(false);
      setAnalysisComplete(true);
      
      toast({
        title: "Analysis complete",
        description: mockResult.isAI 
          ? "This text appears to be AI-generated" 
          : "This text appears to be human-written",
      });
    }, 2500);
  };

  const handleReset = () => {
    setText('');
    setIsAnalyzing(false);
    setAnalysisComplete(false);
    setAnalysisResult(undefined);
  };

  const sampleTexts = [
    "The neural network architecture employs multi-head attention mechanisms to process sequential data with remarkable efficiency, enabling the model to capture long-range dependencies within textual inputs.",
    "My cat knocked over a plant yesterday while I was at work. When I got home there was dirt everywhere and she just sat there looking proud of her accomplishment."
  ];

  const handleUseSample = (index: number) => {
    setText(sampleTexts[index]);
    if (analysisComplete) {
      setAnalysisComplete(false);
      setAnalysisResult(undefined);
    }
  };

  return (
    <Layout>
      <div className="container mx-auto px-4 py-10">
        <div className="max-w-4xl mx-auto">
          <div className="text-center mb-10">
            <h1 className="text-3xl md:text-4xl font-bold mb-4">Text Detection</h1>
            <p className="text-muted-foreground">
              Enter text to determine whether it was generated by AI or written by a human
            </p>
          </div>
          
          <div className="grid md:grid-cols-5 gap-8">
            <div className="md:col-span-3 space-y-6">
              {/* Text Input Section */}
              <Card>
                <CardContent className="p-6">
                  <Textarea 
                    placeholder="Enter text to analyze (minimum 50 characters)" 
                    value={text} 
                    onChange={handleInputChange}
                    rows={10}
                    className="mb-4 resize-none"
                  />
                  
                  <div className="flex flex-wrap justify-between gap-4 mb-4">
                    <div className="text-sm text-muted-foreground">
                      {text.length} characters | At least 50 needed for analysis
                    </div>
                    <div className="space-x-2">
                      <Button 
                        variant="outline" 
                        size="sm" 
                        onClick={() => handleUseSample(0)}
                      >
                        Sample AI Text
                      </Button>
                      <Button 
                        variant="outline" 
                        size="sm" 
                        onClick={() => handleUseSample(1)}
                      >
                        Sample Human Text
                      </Button>
                    </div>
                  </div>
                  
                  <div className="flex justify-center space-x-4">
                    <Button 
                      onClick={handleAnalyzeClick} 
                      disabled={!text.trim() || text.length < 50 || isAnalyzing}
                      className="w-full md:w-auto"
                    >
                      {isAnalyzing ? "Analyzing..." : "Analyze Text"}
                    </Button>
                    
                    {(text || analysisComplete) && (
                      <Button 
                        variant="outline" 
                        onClick={handleReset}
                        className="w-full md:w-auto"
                      >
                        Reset
                      </Button>
                    )}
                  </div>
                </CardContent>
              </Card>
            </div>
            
            <div className="md:col-span-2">
              <DetectionResult
                loading={isAnalyzing}
                completed={analysisComplete}
                result={analysisResult}
              />
              
              {analysisComplete && analysisResult && (
                <div className="mt-6 p-4 rounded-lg bg-muted animate-fade-in">
                  <h3 className="font-medium mb-2">Detection Details:</h3>
                  <ul className="space-y-2 text-sm">
                    <li><strong>Analysis Method:</strong> NLP Pattern Recognition</li>
                    <li><strong>Model:</strong> AuraText v1.0</li>
                    <li><strong>Text Length:</strong> {text.length} characters</li>
                    <li className="text-muted-foreground pt-2 text-xs">
                      Note: This is a demonstration. In the real application, your Keras model would provide the actual detection results.
                    </li>
                  </ul>
                </div>
              )}
              
              <Card className="mt-6">
                <CardContent className="p-4">
                  <h3 className="font-medium mb-2">About Text Detection</h3>
                  <p className="text-sm text-muted-foreground">
                    Our text detection model analyzes patterns, repetition, statistical anomalies, and stylistic consistencies that differentiate between AI-generated and human-written text.
                  </p>
                  <p className="text-sm text-muted-foreground mt-2">
                    For best results, provide at least 100+ characters of text to analyze.
                  </p>
                </CardContent>
              </Card>
            </div>
          </div>
        </div>
      </div>
    </Layout>
  );
};

export default TextDetection;
