import { useEffect, useRef } from 'react';
import { Link } from 'react-router-dom';
import { Button } from '@/components/ui/button';
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';
import Layout from '@/components/Layout';
import { Image, FileText, Video, AudioLines, CheckCircle, ShieldCheck, Zap, Brain } from 'lucide-react';
import { cn } from '@/lib/utils';
const Index = () => {
  const heroRef = useRef<HTMLDivElement>(null);

  // Intersection Observer for scroll animations
  useEffect(() => {
    const observer = new IntersectionObserver(entries => {
      entries.forEach(entry => {
        if (entry.isIntersecting) {
          entry.target.classList.add('animate-fade-in');
          entry.target.classList.remove('opacity-0');
        }
      });
    }, {
      threshold: 0.1
    });
    const elements = document.querySelectorAll('.scroll-animation');
    elements.forEach(el => observer.observe(el));
    return () => {
      elements.forEach(el => observer.unobserve(el));
    };
  }, []);

  // Particle animation effect for hero section
  useEffect(() => {
    if (!heroRef.current) return;
    const hero = heroRef.current;
    const createParticle = () => {
      const particle = document.createElement('div');
      const size = Math.random() * 10 + 2;
      const xPos = Math.random() * hero.offsetWidth;
      const duration = Math.random() * 10 + 5;
      particle.style.width = `${size}px`;
      particle.style.height = `${size}px`;
      particle.style.left = `${xPos}px`;
      particle.style.bottom = '0';
      particle.style.opacity = '0';
      particle.style.position = 'absolute';
      particle.style.borderRadius = '50%';
      particle.style.backgroundColor = 'rgba(59, 130, 246, 0.5)';
      particle.style.boxShadow = '0 0 10px rgba(59, 130, 246, 0.3)';
      particle.style.transform = 'translateY(0)';
      particle.style.transition = `transform ${duration}s ease-out, opacity 2s ease-in-out`;
      hero.appendChild(particle);
      setTimeout(() => {
        particle.style.opacity = '0.7';
        particle.style.transform = `translateY(-${hero.offsetHeight * 0.7}px)`;
      }, 100);
      setTimeout(() => {
        if (particle.parentNode === hero) {
          hero.removeChild(particle);
        }
      }, duration * 1000);
    };
    const interval = setInterval(createParticle, 300);
    return () => clearInterval(interval);
  }, []);

  // Feature animation with entry delay
  useEffect(() => {
    const features = document.querySelectorAll('.feature-card');
    features.forEach((feature, index) => {
      setTimeout(() => {
        feature.classList.add('animate-enter');
        feature.classList.remove('opacity-0');
      }, 300 + index * 150);
    });
  }, []);
  const features = [{
    title: "Image Detection",
    description: "Detect AI-generated images with state-of-the-art neural networks",
    icon: Image,
    color: "from-blue-500 to-blue-400",
    link: "/image",
    benefits: ["99.8% Accuracy", "Fast Processing", "Detail Analysis"]
  }, {
    title: "Video Analysis",
    description: "Identify synthetic videos and deepfakes with advanced frame analysis",
    icon: Video,
    color: "from-blue-600 to-blue-500",
    link: "/video",
    benefits: ["Deepfake Detection", "Frame-by-frame", "Real-time Results"]
  }, {
    title: "Audio Recognition",
    description: "Distinguish between AI and human voices with acoustic fingerprinting",
    icon: AudioLines,
    color: "from-blue-700 to-blue-600",
    link: "/audio",
    benefits: ["Voice Pattern Analysis", "Multi-language Support", "High Precision"]
  }, {
    title: "Text Verification",
    description: "Analyze text to detect content generated by language models",
    icon: FileText,
    color: "from-blue-800 to-blue-700",
    link: "/text",
    benefits: ["StylePattern Recognition", "Cross-LLM Detection", "Context Analysis"]
  }];
  const benefits = [{
    title: "Superior Accuracy",
    description: "Our algorithms achieve over 99% accuracy in detecting AI-generated content",
    icon: CheckCircle
  }, {
    title: "Enhanced Security",
    description: "Protect your organization from misinformation and synthetic media",
    icon: ShieldCheck
  }, {
    title: "Lightning Fast",
    description: "Get results in seconds, not minutes, with our optimized processing",
    icon: Zap
  }, {
    title: "Constantly Learning",
    description: "Our models continuously improve to detect the latest generation techniques",
    icon: Brain
  }];
  return <Layout>
      {/* Hero Section */}
      <section ref={heroRef} className="relative overflow-hidden min-h-[80vh] flex items-center">
        <div className="absolute inset-0 bg-gradient-to-b from-blue-100/80 to-transparent z-0"></div>
        <div className="container mx-auto px-4 py-20 md:py-32 relative z-10">
          <div className="max-w-4xl mx-auto text-center">
            <h1 className="text-5xl md:text-7xl font-bold mb-6 animate-fade-in">
              <span className="gradient-text">AuthenLens</span>
            </h1>
            <p className="text-xl md:text-2xl mb-8 text-blue-800 font-medium animate-fade-in" style={{
            animationDelay: '0.2s'
          }}>
              Advanced Multimodal AI-Generated Content Detection
            </p>
            <p className="text-lg mb-10 animate-fade-in" style={{
            animationDelay: '0.3s'
          }}>
              Protect your organization from synthetic media with our cutting-edge detection system 
              that identifies AI-generated <span className="font-semibold text-primary">images</span>, <span className="font-semibold text-primary">videos</span>, <span className="font-semibold text-primary">audio</span>, and <span className="font-semibold text-primary">text</span> with remarkable accuracy.
            </p>
            <div className="flex flex-wrap justify-center gap-4 animate-fade-in" style={{
            animationDelay: '0.4s'
          }}>
              <Button asChild size="lg" className="bg-blue-600 hover:bg-blue-700 blue-glow-hover">
                <Link to="/image">Get Started</Link>
              </Button>
              <Button variant="outline" size="lg" className="border-blue-500 text-blue-600 hover:text-blue-700 hover:border-blue-600">
                <Link to="#features">Learn More</Link>
              </Button>
            </div>

            {/* Floating Elements */}
            <div className="mt-16 relative h-64 md:h-80 animate-fade-in" style={{
            animationDelay: '0.6s'
          }}>
              <div className="absolute left-1/2 top-1/2 transform -translate-x-1/2 -translate-y-1/2 w-40 h-40 md:w-56 md:h-56 bg-white rounded-2xl shadow-lg flex items-center justify-center blue-glow floating-animation">
                <div className="text-5xl md:text-6xl font-bold text-blue-600">AL</div>
              </div>
              
              <div className="absolute left-[20%] top-[20%] w-16 h-16 md:w-20 md:h-20 bg-blue-500/10 border border-blue-500/30 backdrop-blur-sm rounded-lg shadow-sm floating-animation" style={{
              animationDelay: '1s'
            }}>
                <Image className="w-full h-full p-4 text-blue-500" />
              </div>
              
              <div className="absolute right-[25%] top-[15%] w-14 h-14 md:w-16 md:h-16 bg-blue-600/10 border border-blue-600/30 backdrop-blur-sm rounded-lg shadow-sm floating-animation" style={{
              animationDelay: '1.5s'
            }}>
                <Video className="w-full h-full p-3 text-blue-600" />
              </div>
              
              <div className="absolute left-[25%] bottom-[15%] w-12 h-12 md:w-16 md:h-16 bg-blue-700/10 border border-blue-700/30 backdrop-blur-sm rounded-lg shadow-sm floating-animation" style={{
              animationDelay: '0.7s'
            }}>
                <AudioLines className="w-full h-full p-3 text-blue-700" />
              </div>
              
              <div className="absolute right-[20%] bottom-[20%] w-14 h-14 md:w-18 md:h-18 bg-blue-800/10 border border-blue-800/30 backdrop-blur-sm rounded-lg shadow-sm floating-animation" style={{
              animationDelay: '1.2s'
            }}>
                <FileText className="w-full h-full p-3 text-blue-800" />
              </div>
            </div>
          </div>
        </div>
        
        {/* Wave Divider */}
        <div className="absolute bottom-0 left-0 right-0">
          <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1440 120" className="w-full h-auto">
            <path fill="#ffffff" fillOpacity="1" d="M0,64L48,69.3C96,75,192,85,288,80C384,75,480,53,576,53.3C672,53,768,75,864,80C960,85,1056,75,1152,69.3C1248,64,1344,64,1392,64L1440,64L1440,320L1392,320C1344,320,1248,320,1152,320C1056,320,960,320,864,320C768,320,672,320,576,320C480,320,384,320,288,320C192,320,96,320,48,320L0,320Z"></path>
          </svg>
        </div>
      </section>

      {/* Features Section */}
      <section id="features" className="container mx-auto px-4 py-20 md:py-28 scroll-animation opacity-0">
        <h2 className="text-3xl md:text-5xl font-bold text-center mb-4">Detection Capabilities</h2>
        <p className="text-lg text-center text-muted-foreground max-w-3xl mx-auto mb-16">
          Our cutting-edge AI models can detect artificially generated content across multiple media formats with exceptional accuracy
        </p>
        
        <div className="grid grid-cols-1 md:grid-cols-2 gap-8 max-w-6xl mx-auto">
          {features.map((feature, index) => <Card key={index} className="feature-card opacity-0 interactive-card border overflow-hidden ripple-animation scale-hover">
              <CardHeader className={cn("border-b bg-gradient-to-br p-6", `${feature.color} bg-clip-text text-transparent`)}>
                <div className="flex items-center mb-3">
                  <div className={cn("p-2 rounded-lg mr-3 flex-shrink-0", `bg-gradient-to-br ${feature.color}`)}>
                    <feature.icon className="h-6 w-6 text-white" />
                  </div>
                  <CardTitle className="text-2xl">{feature.title}</CardTitle>
                </div>
                <CardDescription className="text-base text-foreground/70">{feature.description}</CardDescription>
              </CardHeader>
              <CardContent className="pt-6 pb-4">
                <div className="mb-4">
                  <ul className="grid grid-cols-1 gap-2">
                    {feature.benefits.map((benefit, i) => <li key={i} className="flex items-center text-sm">
                        <CheckCircle className="h-4 w-4 mr-2 text-blue-500" />
                        <span>{benefit}</span>
                      </li>)}
                  </ul>
                </div>
                <div className="flex justify-end">
                  <Button variant="ghost" asChild className="text-blue-600 hover:text-blue-700 hover:bg-blue-50 group">
                    <Link to={feature.link}>
                      Try Now
                      <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round" className="ml-1 w-4 h-4 transition-transform duration-300 group-hover:translate-x-1">
                        <path d="M5 12h14" />
                        <path d="m12 5 7 7-7 7" />
                      </svg>
                    </Link>
                  </Button>
                </div>
              </CardContent>
            </Card>)}
        </div>
      </section>

      {/* Benefits Section */}
      <section className="bg-gradient-to-b from-blue-50 to-white py-20 md:py-28 scroll-animation opacity-0">
        <div className="container mx-auto px-4">
          <h2 className="text-3xl md:text-5xl font-bold text-center mb-4">Why Choose AuthenLens</h2>
          <p className="text-lg text-center text-muted-foreground max-w-3xl mx-auto mb-16">
            Our platform offers unparalleled accuracy and security in detecting AI-generated content
          </p>
          
          <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-8 max-w-6xl mx-auto">
            {benefits.map((benefit, index) => <div key={index} className="bg-white p-6 rounded-xl shadow-md border border-blue-100 hover:border-blue-300 hover:shadow-lg transition-all duration-300" style={{
            animationDelay: `${index * 100}ms`
          }}>
                <div className="w-12 h-12 rounded-full bg-blue-100 text-blue-600 flex items-center justify-center mb-4">
                  <benefit.icon className="h-6 w-6" />
                </div>
                <h3 className="text-xl font-semibold mb-3">{benefit.title}</h3>
                <p className="text-muted-foreground">{benefit.description}</p>
              </div>)}
          </div>
        </div>
      </section>

      {/* How It Works Section */}
      <section className="py-20 md:py-28 scroll-animation opacity-0">
        <div className="container mx-auto px-4">
          <h2 className="text-3xl md:text-5xl font-bold text-center mb-4">How It Works</h2>
          <p className="text-lg text-center text-muted-foreground max-w-3xl mx-auto mb-16">
            A simple three-step process to detect AI-generated content
          </p>
          
          <div className="grid grid-cols-1 md:grid-cols-3 gap-8 max-w-5xl mx-auto">
            <div className="bg-white border border-blue-100 p-8 rounded-lg shadow-md hover:shadow-lg transition-all duration-300 text-center">
              <div className="w-16 h-16 rounded-full bg-blue-100 text-blue-600 flex items-center justify-center mx-auto mb-6">
                <span className="text-2xl font-bold">1</span>
              </div>
              <h3 className="text-2xl font-semibold mb-3">Upload Content</h3>
              <p className="text-muted-foreground">
                Upload your media file or paste your text that you want to analyze for authenticity
              </p>
            </div>
            
            <div className="bg-white border border-blue-100 p-8 rounded-lg shadow-md hover:shadow-lg transition-all duration-300 text-center relative">
              <div className="absolute -left-4 top-1/2 transform -translate-y-1/2 h-0.5 w-4 bg-blue-300 hidden md:block"></div>
              <div className="absolute -right-4 top-1/2 transform -translate-y-1/2 h-0.5 w-4 bg-blue-300 hidden md:block"></div>
              <div className="w-16 h-16 rounded-full bg-blue-100 text-blue-600 flex items-center justify-center mx-auto mb-6">
                <span className="text-2xl font-bold">2</span>
              </div>
              <h3 className="text-2xl font-semibold mb-3">Advanced Analysis</h3>
              <p className="text-muted-foreground">
                Our specialized neural networks analyze the content for AI signatures and anomalies
              </p>
            </div>
            
            <div className="bg-white border border-blue-100 p-8 rounded-lg shadow-md hover:shadow-lg transition-all duration-300 text-center">
              <div className="w-16 h-16 rounded-full bg-blue-100 text-blue-600 flex items-center justify-center mx-auto mb-6">
                <span className="text-2xl font-bold">3</span>
              </div>
              <h3 className="text-2xl font-semibold mb-3">Detailed Results</h3>
              <p className="text-muted-foreground">
                Receive a comprehensive report indicating whether the content is AI-generated or authentic
              </p>
            </div>
          </div>
        </div>
      </section>

      {/* CTA Section */}
      <section className="bg-gradient-to-br from-blue-600 to-blue-800 text-white py-16 md:py-20 scroll-animation opacity-0">
        <div className="container mx-auto px-4 py-8 text-center">
          <h2 className="text-3xl md:text-4xl font-bold mb-6">Ready to identify AI-generated content?</h2>
          <p className="text-xl mb-8 max-w-2xl mx-auto text-blue-100">
            Start using our advanced detection system today to verify the authenticity of digital content.
          </p>
          <div className="flex flex-wrap justify-center gap-4">
            <Button asChild size="lg" variant="default" className="bg-white text-blue-700 hover:bg-blue-50 shadow-lg">
              <Link to="/image">Try Image Detection</Link>
            </Button>
            <Button asChild size="lg" variant="outline" className="border-white text-white hover:bg-white/10">
              <Link to="/text">Try Text Detection</Link>
            </Button>
          </div>
        </div>
      </section>

      {/* Testimonials/Social Proof */}
      <section className="py-16 md:py-20 scroll-animation opacity-0">
        <div className="container mx-auto px-4">
          <h2 className="text-3xl md:text-4xl font-bold text-center mb-2">Trusted Technology</h2>
          <p className="text-center text-muted-foreground mb-12">Developed with cutting-edge research and technologies</p>
          
          <div className="flex flex-wrap justify-center items-center gap-8 md:gap-16">
            <div className="text-center">
              <div className="text-5xl font-bold text-blue-600 mb-2"><90%</div>
              <div className="text-sm text-muted-foreground">Average Detection Accuracy</div>
            </div>
            <div className="text-center">
              <div className="text-5xl font-bold text-blue-600 mb-2">4</div>
              <div className="text-sm text-muted-foreground">Media Types</div>
            </div>
            <div className="text-center">
              <div className="text-5xl font-bold text-blue-600 mb-2">1</div>
              <div className="text-sm text-muted-foreground">Click</div>
            </div>
            <div className="text-center">
              <div className="text-5xl font-bold text-blue-600 mb-2">1</div>
              <div className="text-sm text-muted-foreground">Platform</div>
            </div>
          </div>
        </div>
      </section>
    </Layout>;
};
export default Index;